// <auto-generated />
using System;
using DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbContext.Migrations.SqlServerDbContext
{
    [DbContext(typeof(MainDbContext.SqlServerDbContext))]
    partial class SqlServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbModels.ActivityDbM", b =>
                {
                    b.Property<Guid>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivityLevelDbMActivityLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StrDate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StrDayOfWeek")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ActivityId");

                    b.HasIndex("ActivityLevelDbMActivityLevelId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("Activities", "supusr");
                });

            modelBuilder.Entity("DbModels.ActivityLevelDbM", b =>
                {
                    b.Property<Guid>("ActivityLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("ActivityLevelId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("ActivityLevels", "supusr");

                    b.HasData(
                        new
                        {
                            ActivityLevelId = new Guid("d71ca5b0-a519-4e09-b020-53dc32bc6114"),
                            Label = "Resting 🛌",
                            Name = "Resting",
                            Rating = 1
                        },
                        new
                        {
                            ActivityLevelId = new Guid("55083e84-1d9a-4813-bf3a-6786c4d39eb8"),
                            Label = "Reading 📖",
                            Name = "Reading",
                            Rating = 3
                        },
                        new
                        {
                            ActivityLevelId = new Guid("7835cb39-e0e9-4cf0-9fa3-9321fb120b41"),
                            Label = "Take a Walk 🚶‍♂️",
                            Name = "Take a Walk",
                            Rating = 5
                        },
                        new
                        {
                            ActivityLevelId = new Guid("d5fa4858-2ab1-42d0-8a62-f1ff9d7a7430"),
                            Label = "Jogging 🏃‍♂️",
                            Name = "Jogging",
                            Rating = 10
                        },
                        new
                        {
                            ActivityLevelId = new Guid("a3f1051d-fb1c-4425-a97b-c455392df289"),
                            Label = "Swimming 🏊‍♂️",
                            Name = "Swimming",
                            Rating = 7
                        },
                        new
                        {
                            ActivityLevelId = new Guid("23aaf79d-0289-4e0a-a269-b6bf86d265be"),
                            Label = "Training 🏋️‍♂️",
                            Name = "Training",
                            Rating = 9
                        });
                });

            modelBuilder.Entity("DbModels.AppetiteDbM", b =>
                {
                    b.Property<Guid>("AppetiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppetiteLevelDbMAppetiteLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StrDate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StrDayOfWeek")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AppetiteId");

                    b.HasIndex("AppetiteLevelDbMAppetiteLevelId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("Appetites", "supusr");
                });

            modelBuilder.Entity("DbModels.AppetiteLevelDbM", b =>
                {
                    b.Property<Guid>("AppetiteLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("AppetiteLevelId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("AppetiteLevels", "supusr");

                    b.HasData(
                        new
                        {
                            AppetiteLevelId = new Guid("174ab384-6b66-4ae4-a2a4-33bce29b5229"),
                            Label = "Didn't Eat At All 🤢",
                            Name = "Didn't Eat At All",
                            Rating = 1
                        },
                        new
                        {
                            AppetiteLevelId = new Guid("b888e9ae-c9e8-4245-8925-639ac00332d2"),
                            Label = "Little 🍽️",
                            Name = "Little",
                            Rating = 3
                        },
                        new
                        {
                            AppetiteLevelId = new Guid("6fca552c-266e-4035-8253-ab8361841080"),
                            Label = "Normal Appetite 🙂",
                            Name = "Normal",
                            Rating = 5
                        },
                        new
                        {
                            AppetiteLevelId = new Guid("fc59b7f8-e4d5-4d8b-bb0d-3a97111bd621"),
                            Label = "Medium 😋",
                            Name = "Medium",
                            Rating = 7
                        },
                        new
                        {
                            AppetiteLevelId = new Guid("dba7c281-c493-4b26-a273-cdc789904dd5"),
                            Label = "Very Much 🍴",
                            Name = "Very Much",
                            Rating = 10
                        });
                });

            modelBuilder.Entity("DbModels.GraphDbM", b =>
                {
                    b.Property<Guid>("GraphId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GraphId");

                    b.ToTable("Graphs", "supusr");
                });

            modelBuilder.Entity("DbModels.MoodDbM", b =>
                {
                    b.Property<Guid>("MoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<Guid?>("MoodKindDbMMoodKindId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StrDate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StrDayOfWeek")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MoodId");

                    b.HasIndex("MoodKindDbMMoodKindId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("Moods", "supusr");
                });

            modelBuilder.Entity("DbModels.MoodKindDbM", b =>
                {
                    b.Property<Guid>("MoodKindId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("MoodKindId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("MoodKinds", "supusr");

                    b.HasData(
                        new
                        {
                            MoodKindId = new Guid("45e78869-c61b-408d-8012-f386da46c1d4"),
                            Label = "Happy 😃",
                            Name = "Happy",
                            Rating = 10
                        },
                        new
                        {
                            MoodKindId = new Guid("44cc53f7-0df1-4ad2-ac57-7e91c4d9f0b8"),
                            Label = "Sad 🙁",
                            Name = "Sad",
                            Rating = 2
                        },
                        new
                        {
                            MoodKindId = new Guid("c961cc7e-035c-4bb6-b868-1aa959cba1be"),
                            Label = "Angry 😡",
                            Name = "Angry",
                            Rating = 3
                        },
                        new
                        {
                            MoodKindId = new Guid("6edf22ff-9a5d-436b-bc3d-6a7d4ebd4f82"),
                            Label = "Lovely 😍",
                            Name = "Lovely",
                            Rating = 7
                        },
                        new
                        {
                            MoodKindId = new Guid("79fae583-5605-49c4-9ab5-f63090387498"),
                            Label = "Depressed 😢",
                            Name = "Depressed",
                            Rating = 1
                        },
                        new
                        {
                            MoodKindId = new Guid("6fb6d12f-97f0-4517-b41e-f66b464ae3ae"),
                            Label = "Excited 🤩",
                            Name = "Excited",
                            Rating = 9
                        },
                        new
                        {
                            MoodKindId = new Guid("1bd668e2-a9a2-42c4-9bfa-937048209c4e"),
                            Label = "Bored 😒",
                            Name = "Bored",
                            Rating = 4
                        });
                });

            modelBuilder.Entity("DbModels.PatientDbM", b =>
                {
                    b.Property<Guid>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("GraphId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PersonalNumber")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("StaffDbMStaffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PatientId");

                    b.HasIndex("GraphId")
                        .IsUnique()
                        .HasFilter("[GraphId] IS NOT NULL");

                    b.HasIndex("StaffDbMStaffId");

                    b.ToTable("Patients", "supusr");

                    b.HasData(
                        new
                        {
                            PatientId = new Guid("afd9da85-b98e-4737-9978-85e27c363678"),
                            FirstName = "Madi",
                            LastName = "Alabama",
                            PersonalNumber = "19560831-1111"
                        },
                        new
                        {
                            PatientId = new Guid("b780f8e3-d702-4481-9c0d-943e0fbfab86"),
                            FirstName = "John",
                            LastName = "Doe",
                            PersonalNumber = "19480516-2222"
                        },
                        new
                        {
                            PatientId = new Guid("5242d2cb-4409-4574-b62a-09a708474eb0"),
                            FirstName = "Jane",
                            LastName = "Smith",
                            PersonalNumber = "19610228-1212"
                        },
                        new
                        {
                            PatientId = new Guid("71219639-728c-4338-aae0-dcf9fec4562d"),
                            FirstName = "Alice",
                            LastName = "Johnson",
                            PersonalNumber = "19450801-4444"
                        },
                        new
                        {
                            PatientId = new Guid("1d9f470a-b742-4e61-9d2e-9c4a533e0420"),
                            FirstName = "Bob",
                            LastName = "Brown",
                            PersonalNumber = "19501110-1331"
                        },
                        new
                        {
                            PatientId = new Guid("01496f73-1231-4f68-8edd-a59e6cee4f1c"),
                            FirstName = "Charlie",
                            LastName = "Davis",
                            PersonalNumber = "19511231-16181"
                        });
                });

            modelBuilder.Entity("DbModels.SleepDbM", b =>
                {
                    b.Property<Guid>("SleepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SleepLevelDbMSleepLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StrDate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StrDayOfWeek")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("SleepId");

                    b.HasIndex("PatientDbMPatientId");

                    b.HasIndex("SleepLevelDbMSleepLevelId");

                    b.ToTable("Sleeps", "supusr");
                });

            modelBuilder.Entity("DbModels.SleepLevelDbM", b =>
                {
                    b.Property<Guid>("SleepLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("SleepLevelId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("SleepLevels", "supusr");

                    b.HasData(
                        new
                        {
                            SleepLevelId = new Guid("6cc31ea4-b15a-42e3-a52e-a99b21ea67d4"),
                            Label = "Low Sleep Level 🙁",
                            Name = "Low",
                            Rating = 5
                        },
                        new
                        {
                            SleepLevelId = new Guid("81ffb6c6-b74b-47f7-a4ce-22e3930dbaf7"),
                            Label = "Medium Sleep Level 😐",
                            Name = "Medium",
                            Rating = 6
                        },
                        new
                        {
                            SleepLevelId = new Guid("6e5103e8-3e57-4f4f-8c2e-999f6a3bd3d7"),
                            Label = "OK Sleep Level 🙂",
                            Name = "OK",
                            Rating = 8
                        },
                        new
                        {
                            SleepLevelId = new Guid("2b9a0a38-fe01-4b18-8fbb-390e8597492b"),
                            Label = "Too much Sleep Level 😃",
                            Name = "Too much",
                            Rating = 10
                        });
                });

            modelBuilder.Entity("DbModels.StaffDbM", b =>
                {
                    b.Property<Guid>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PersonalNumber")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("StaffId");

                    b.ToTable("Staffs", "supusr");
                });

            modelBuilder.Entity("DbModels.UserDbM", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserId");

                    b.ToTable("Users", "dbo");
                });

            modelBuilder.Entity("Models.DTO.GstUsrInfoDbDto", b =>
                {
                    b.Property<int>("NrActivities")
                        .HasColumnType("int");

                    b.Property<int>("NrAppetites")
                        .HasColumnType("int");

                    b.Property<int>("NrGraphs")
                        .HasColumnType("int");

                    b.Property<int>("NrMoods")
                        .HasColumnType("int");

                    b.Property<int>("NrPatients")
                        .HasColumnType("int");

                    b.Property<int>("NrSleeps")
                        .HasColumnType("int");

                    b.Property<int>("NrStaffs")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vwInfoDb", "gstusr");
                });

            modelBuilder.Entity("Models.DTO.GstUsrInfoStaffsDto", b =>
                {
                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NrPatients")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vwInfoStaffs", "gstusr");
                });

            modelBuilder.Entity("DbModels.ActivityDbM", b =>
                {
                    b.HasOne("DbModels.ActivityLevelDbM", "ActivityLevelDbM")
                        .WithMany("ActivitiesDbM")
                        .HasForeignKey("ActivityLevelDbMActivityLevelId");

                    b.HasOne("DbModels.PatientDbM", "PatientDbM")
                        .WithMany()
                        .HasForeignKey("PatientDbMPatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityLevelDbM");

                    b.Navigation("PatientDbM");
                });

            modelBuilder.Entity("DbModels.ActivityLevelDbM", b =>
                {
                    b.HasOne("DbModels.PatientDbM", null)
                        .WithMany("ActivityLevelsDbM")
                        .HasForeignKey("PatientDbMPatientId");
                });

            modelBuilder.Entity("DbModels.AppetiteDbM", b =>
                {
                    b.HasOne("DbModels.AppetiteLevelDbM", "AppetiteLevelDbM")
                        .WithMany("AppetitesDbM")
                        .HasForeignKey("AppetiteLevelDbMAppetiteLevelId");

                    b.HasOne("DbModels.PatientDbM", "PatientDbM")
                        .WithMany()
                        .HasForeignKey("PatientDbMPatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppetiteLevelDbM");

                    b.Navigation("PatientDbM");
                });

            modelBuilder.Entity("DbModels.AppetiteLevelDbM", b =>
                {
                    b.HasOne("DbModels.PatientDbM", null)
                        .WithMany("AppetiteLevelsDbM")
                        .HasForeignKey("PatientDbMPatientId");
                });

            modelBuilder.Entity("DbModels.MoodDbM", b =>
                {
                    b.HasOne("DbModels.MoodKindDbM", "MoodKindDbM")
                        .WithMany("MoodsDbM")
                        .HasForeignKey("MoodKindDbMMoodKindId");

                    b.HasOne("DbModels.PatientDbM", "PatientDbM")
                        .WithMany()
                        .HasForeignKey("PatientDbMPatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MoodKindDbM");

                    b.Navigation("PatientDbM");
                });

            modelBuilder.Entity("DbModels.MoodKindDbM", b =>
                {
                    b.HasOne("DbModels.PatientDbM", null)
                        .WithMany("MoodKindsDbM")
                        .HasForeignKey("PatientDbMPatientId");
                });

            modelBuilder.Entity("DbModels.PatientDbM", b =>
                {
                    b.HasOne("DbModels.GraphDbM", "GraphDbM")
                        .WithOne("PatientDbM")
                        .HasForeignKey("DbModels.PatientDbM", "GraphId");

                    b.HasOne("DbModels.StaffDbM", null)
                        .WithMany("PatientsDbM")
                        .HasForeignKey("StaffDbMStaffId");

                    b.Navigation("GraphDbM");
                });

            modelBuilder.Entity("DbModels.SleepDbM", b =>
                {
                    b.HasOne("DbModels.PatientDbM", "PatientDbM")
                        .WithMany()
                        .HasForeignKey("PatientDbMPatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbModels.SleepLevelDbM", "SleepLevelDbM")
                        .WithMany("SleepsDbM")
                        .HasForeignKey("SleepLevelDbMSleepLevelId");

                    b.Navigation("PatientDbM");

                    b.Navigation("SleepLevelDbM");
                });

            modelBuilder.Entity("DbModels.SleepLevelDbM", b =>
                {
                    b.HasOne("DbModels.PatientDbM", null)
                        .WithMany("SleepLevelsDbM")
                        .HasForeignKey("PatientDbMPatientId");
                });

            modelBuilder.Entity("DbModels.ActivityLevelDbM", b =>
                {
                    b.Navigation("ActivitiesDbM");
                });

            modelBuilder.Entity("DbModels.AppetiteLevelDbM", b =>
                {
                    b.Navigation("AppetitesDbM");
                });

            modelBuilder.Entity("DbModels.GraphDbM", b =>
                {
                    b.Navigation("PatientDbM")
                        .IsRequired();
                });

            modelBuilder.Entity("DbModels.MoodKindDbM", b =>
                {
                    b.Navigation("MoodsDbM");
                });

            modelBuilder.Entity("DbModels.PatientDbM", b =>
                {
                    b.Navigation("ActivityLevelsDbM");

                    b.Navigation("AppetiteLevelsDbM");

                    b.Navigation("MoodKindsDbM");

                    b.Navigation("SleepLevelsDbM");
                });

            modelBuilder.Entity("DbModels.SleepLevelDbM", b =>
                {
                    b.Navigation("SleepsDbM");
                });

            modelBuilder.Entity("DbModels.StaffDbM", b =>
                {
                    b.Navigation("PatientsDbM");
                });
#pragma warning restore 612, 618
        }
    }
}
