// <auto-generated />
using System;
using DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbContext.Migrations.SqlServerDbContext
{
    [DbContext(typeof(MainDbContext.SqlServerDbContext))]
    partial class SqlServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbModels.ActivityDbM", b =>
                {
                    b.Property<Guid>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivityLevelDbMActivityLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StrDate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StrDayOfWeek")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ActivityId");

                    b.HasIndex("ActivityLevelDbMActivityLevelId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("Activities", "supusr");
                });

            modelBuilder.Entity("DbModels.ActivityLevelDbM", b =>
                {
                    b.Property<Guid>("ActivityLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("ActivityLevelId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("ActivityLevels", "supusr");

                    b.HasData(
                        new
                        {
                            ActivityLevelId = new Guid("fe3370da-b2f0-4957-a1cd-7cc4d48050c8"),
                            Label = "Resting 🛌",
                            Name = "Resting",
                            Rating = 1
                        },
                        new
                        {
                            ActivityLevelId = new Guid("737e80ee-1ba7-442a-b5f5-58d09c4fb1ca"),
                            Label = "Reading 📖",
                            Name = "Reading",
                            Rating = 3
                        },
                        new
                        {
                            ActivityLevelId = new Guid("17da75cc-7967-4dde-8763-da663bd07fc0"),
                            Label = "Take a Walk 🚶‍♂️",
                            Name = "Take a Walk",
                            Rating = 5
                        },
                        new
                        {
                            ActivityLevelId = new Guid("20faa3cc-4034-41a5-9e62-32e2d2970234"),
                            Label = "Jogging 🏃‍♂️",
                            Name = "Jogging",
                            Rating = 10
                        },
                        new
                        {
                            ActivityLevelId = new Guid("c0b9358d-f517-43b9-ba59-a0747573726c"),
                            Label = "Swimming 🏊‍♂️",
                            Name = "Swimming",
                            Rating = 7
                        },
                        new
                        {
                            ActivityLevelId = new Guid("95b46ac7-4961-46c4-886e-fbc858abea81"),
                            Label = "Training 🏋️‍♂️",
                            Name = "Training",
                            Rating = 9
                        });
                });

            modelBuilder.Entity("DbModels.AppetiteDbM", b =>
                {
                    b.Property<Guid>("AppetiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppetiteLevelDbMAppetiteLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StrDate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StrDayOfWeek")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AppetiteId");

                    b.HasIndex("AppetiteLevelDbMAppetiteLevelId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("Appetites", "supusr");
                });

            modelBuilder.Entity("DbModels.AppetiteLevelDbM", b =>
                {
                    b.Property<Guid>("AppetiteLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("AppetiteLevelId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("AppetiteLevels", "supusr");

                    b.HasData(
                        new
                        {
                            AppetiteLevelId = new Guid("00b65abc-9741-475e-80eb-b909ab7e4f91"),
                            Label = "Didn't Eat At All 🤢",
                            Name = "Didn't Eat At All",
                            Rating = 1
                        },
                        new
                        {
                            AppetiteLevelId = new Guid("bcb53f96-0650-420c-8d9e-f4360f835392"),
                            Label = "Little 🍽️",
                            Name = "Little",
                            Rating = 3
                        },
                        new
                        {
                            AppetiteLevelId = new Guid("9a0bd7a1-2601-4d5d-9266-8f4c32d48bf9"),
                            Label = "Normal Appetite 🙂",
                            Name = "Normal",
                            Rating = 5
                        },
                        new
                        {
                            AppetiteLevelId = new Guid("d31848d5-9424-42f4-9f32-a6338c0e4051"),
                            Label = "Medium 😋",
                            Name = "Medium",
                            Rating = 7
                        },
                        new
                        {
                            AppetiteLevelId = new Guid("60bc41bf-a7c9-4c5a-b2a8-b8755b55df9f"),
                            Label = "Very Much 🍴",
                            Name = "Very Much",
                            Rating = 10
                        });
                });

            modelBuilder.Entity("DbModels.GraphDbM", b =>
                {
                    b.Property<Guid>("GraphId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GraphId");

                    b.ToTable("Graphs", "supusr");
                });

            modelBuilder.Entity("DbModels.MoodDbM", b =>
                {
                    b.Property<Guid>("MoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<Guid?>("MoodKindDbMMoodKindId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StrDate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StrDayOfWeek")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MoodId");

                    b.HasIndex("MoodKindDbMMoodKindId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("Moods", "supusr");
                });

            modelBuilder.Entity("DbModels.MoodKindDbM", b =>
                {
                    b.Property<Guid>("MoodKindId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("MoodKindId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("MoodKinds", "supusr");

                    b.HasData(
                        new
                        {
                            MoodKindId = new Guid("83b16dd6-3166-4082-9b0c-696c75826c94"),
                            Label = "Happy 😃",
                            Name = "Happy",
                            Rating = 10
                        },
                        new
                        {
                            MoodKindId = new Guid("227a46de-1c95-459b-b139-69f457023ae5"),
                            Label = "Sad 🙁",
                            Name = "Sad",
                            Rating = 2
                        },
                        new
                        {
                            MoodKindId = new Guid("5b81373e-bf20-4709-ac91-fc9a1ce708b4"),
                            Label = "Angry 😡",
                            Name = "Angry",
                            Rating = 3
                        },
                        new
                        {
                            MoodKindId = new Guid("ec9bf1a8-7deb-4bcd-b48e-c896c069e63b"),
                            Label = "Lovely 😍",
                            Name = "Lovely",
                            Rating = 7
                        },
                        new
                        {
                            MoodKindId = new Guid("5fff0f7f-ad0b-4092-9b9c-7fa283114bbb"),
                            Label = "Depressed 😢",
                            Name = "Depressed",
                            Rating = 1
                        },
                        new
                        {
                            MoodKindId = new Guid("4995feb8-a05c-4bab-a96a-94608e2452a0"),
                            Label = "Excited 🤩",
                            Name = "Excited",
                            Rating = 9
                        },
                        new
                        {
                            MoodKindId = new Guid("d940e41a-359b-4396-8f98-ae2851745130"),
                            Label = "Bored 😒",
                            Name = "Bored",
                            Rating = 4
                        });
                });

            modelBuilder.Entity("DbModels.PatientDbM", b =>
                {
                    b.Property<Guid>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("GraphId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PersonalNumber")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("StaffDbMStaffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PatientId");

                    b.HasIndex("GraphId")
                        .IsUnique()
                        .HasFilter("[GraphId] IS NOT NULL");

                    b.HasIndex("StaffDbMStaffId");

                    b.ToTable("Patients", "supusr");

                    b.HasData(
                        new
                        {
                            PatientId = new Guid("4c1968fd-829e-4ec3-96a3-6bc39a958061"),
                            FirstName = "Madi",
                            LastName = "Alabama",
                            PersonalNumber = "19560831-1111"
                        },
                        new
                        {
                            PatientId = new Guid("81c9b777-6183-4484-af55-8fd0071f00b1"),
                            FirstName = "John",
                            LastName = "Doe",
                            PersonalNumber = "19480516-2222"
                        },
                        new
                        {
                            PatientId = new Guid("65fed04f-2cba-4148-b650-9c84ac02bb88"),
                            FirstName = "Jane",
                            LastName = "Smith",
                            PersonalNumber = "19610228-1212"
                        },
                        new
                        {
                            PatientId = new Guid("50b88afb-b2a1-4b5e-892b-bf88eda90df6"),
                            FirstName = "Alice",
                            LastName = "Johnson",
                            PersonalNumber = "19450801-4444"
                        },
                        new
                        {
                            PatientId = new Guid("65e16313-5939-473b-99a5-670d599e4774"),
                            FirstName = "Bob",
                            LastName = "Brown",
                            PersonalNumber = "19501110-1331"
                        },
                        new
                        {
                            PatientId = new Guid("77d692e9-43d6-46a0-8ff0-778f679d35d4"),
                            FirstName = "Charlie",
                            LastName = "Davis",
                            PersonalNumber = "19511231-16181"
                        });
                });

            modelBuilder.Entity("DbModels.SleepDbM", b =>
                {
                    b.Property<Guid>("SleepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SleepLevelDbMSleepLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StrDate")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StrDayOfWeek")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("SleepId");

                    b.HasIndex("PatientDbMPatientId");

                    b.HasIndex("SleepLevelDbMSleepLevelId");

                    b.ToTable("Sleeps", "supusr");
                });

            modelBuilder.Entity("DbModels.SleepLevelDbM", b =>
                {
                    b.Property<Guid>("SleepLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("PatientDbMPatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("SleepLevelId");

                    b.HasIndex("PatientDbMPatientId");

                    b.ToTable("SleepLevels", "supusr");

                    b.HasData(
                        new
                        {
                            SleepLevelId = new Guid("4ac400b5-574d-4ef0-bc6a-2fdc25121f39"),
                            Label = "Low Sleep Level 🙁",
                            Name = "Low",
                            Rating = 5
                        },
                        new
                        {
                            SleepLevelId = new Guid("0085c7ef-72ea-4474-ba8e-2a74fc4ce2b0"),
                            Label = "Medium Sleep Level 😐",
                            Name = "Medium",
                            Rating = 6
                        },
                        new
                        {
                            SleepLevelId = new Guid("88ede65e-7482-4eee-95c1-12fcd0d638b4"),
                            Label = "OK Sleep Level 🙂",
                            Name = "OK",
                            Rating = 8
                        },
                        new
                        {
                            SleepLevelId = new Guid("8bdac729-86a3-4d79-8f59-8e41b441e0bd"),
                            Label = "Too much Sleep Level 😃",
                            Name = "Too much",
                            Rating = 10
                        });
                });

            modelBuilder.Entity("DbModels.StaffDbM", b =>
                {
                    b.Property<Guid>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PersonalNumber")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("StaffId");

                    b.ToTable("Staffs", "supusr");
                });

            modelBuilder.Entity("DbModels.UserDbM", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserId");

                    b.ToTable("Users", "dbo");
                });

            modelBuilder.Entity("Models.DTO.GstUsrInfoDbDto", b =>
                {
                    b.Property<int>("NrActivities")
                        .HasColumnType("int");

                    b.Property<int>("NrAppetites")
                        .HasColumnType("int");

                    b.Property<int>("NrGraphs")
                        .HasColumnType("int");

                    b.Property<int>("NrMoods")
                        .HasColumnType("int");

                    b.Property<int>("NrPatients")
                        .HasColumnType("int");

                    b.Property<int>("NrSleeps")
                        .HasColumnType("int");

                    b.Property<int>("NrStaffs")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vwInfoDb", "gstusr");
                });

            modelBuilder.Entity("Models.DTO.GstUsrInfoStaffsDto", b =>
                {
                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NrPatients")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vwInfoStaffs", "gstusr");
                });

            modelBuilder.Entity("DbModels.ActivityDbM", b =>
                {
                    b.HasOne("DbModels.ActivityLevelDbM", "ActivityLevelDbM")
                        .WithMany("ActivitiesDbM")
                        .HasForeignKey("ActivityLevelDbMActivityLevelId");

                    b.HasOne("DbModels.PatientDbM", "PatientDbM")
                        .WithMany()
                        .HasForeignKey("PatientDbMPatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityLevelDbM");

                    b.Navigation("PatientDbM");
                });

            modelBuilder.Entity("DbModels.ActivityLevelDbM", b =>
                {
                    b.HasOne("DbModels.PatientDbM", null)
                        .WithMany("ActivityLevelsDbM")
                        .HasForeignKey("PatientDbMPatientId");
                });

            modelBuilder.Entity("DbModels.AppetiteDbM", b =>
                {
                    b.HasOne("DbModels.AppetiteLevelDbM", "AppetiteLevelDbM")
                        .WithMany("AppetitesDbM")
                        .HasForeignKey("AppetiteLevelDbMAppetiteLevelId");

                    b.HasOne("DbModels.PatientDbM", "PatientDbM")
                        .WithMany()
                        .HasForeignKey("PatientDbMPatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppetiteLevelDbM");

                    b.Navigation("PatientDbM");
                });

            modelBuilder.Entity("DbModels.AppetiteLevelDbM", b =>
                {
                    b.HasOne("DbModels.PatientDbM", null)
                        .WithMany("AppetiteLevelsDbM")
                        .HasForeignKey("PatientDbMPatientId");
                });

            modelBuilder.Entity("DbModels.MoodDbM", b =>
                {
                    b.HasOne("DbModels.MoodKindDbM", "MoodKindDbM")
                        .WithMany("MoodsDbM")
                        .HasForeignKey("MoodKindDbMMoodKindId");

                    b.HasOne("DbModels.PatientDbM", "PatientDbM")
                        .WithMany()
                        .HasForeignKey("PatientDbMPatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MoodKindDbM");

                    b.Navigation("PatientDbM");
                });

            modelBuilder.Entity("DbModels.MoodKindDbM", b =>
                {
                    b.HasOne("DbModels.PatientDbM", null)
                        .WithMany("MoodKindsDbM")
                        .HasForeignKey("PatientDbMPatientId");
                });

            modelBuilder.Entity("DbModels.PatientDbM", b =>
                {
                    b.HasOne("DbModels.GraphDbM", "GraphDbM")
                        .WithOne("PatientDbM")
                        .HasForeignKey("DbModels.PatientDbM", "GraphId");

                    b.HasOne("DbModels.StaffDbM", null)
                        .WithMany("PatientsDbM")
                        .HasForeignKey("StaffDbMStaffId");

                    b.Navigation("GraphDbM");
                });

            modelBuilder.Entity("DbModels.SleepDbM", b =>
                {
                    b.HasOne("DbModels.PatientDbM", "PatientDbM")
                        .WithMany()
                        .HasForeignKey("PatientDbMPatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbModels.SleepLevelDbM", "SleepLevelDbM")
                        .WithMany("SleepsDbM")
                        .HasForeignKey("SleepLevelDbMSleepLevelId");

                    b.Navigation("PatientDbM");

                    b.Navigation("SleepLevelDbM");
                });

            modelBuilder.Entity("DbModels.SleepLevelDbM", b =>
                {
                    b.HasOne("DbModels.PatientDbM", null)
                        .WithMany("SleepLevelsDbM")
                        .HasForeignKey("PatientDbMPatientId");
                });

            modelBuilder.Entity("DbModels.ActivityLevelDbM", b =>
                {
                    b.Navigation("ActivitiesDbM");
                });

            modelBuilder.Entity("DbModels.AppetiteLevelDbM", b =>
                {
                    b.Navigation("AppetitesDbM");
                });

            modelBuilder.Entity("DbModels.GraphDbM", b =>
                {
                    b.Navigation("PatientDbM")
                        .IsRequired();
                });

            modelBuilder.Entity("DbModels.MoodKindDbM", b =>
                {
                    b.Navigation("MoodsDbM");
                });

            modelBuilder.Entity("DbModels.PatientDbM", b =>
                {
                    b.Navigation("ActivityLevelsDbM");

                    b.Navigation("AppetiteLevelsDbM");

                    b.Navigation("MoodKindsDbM");

                    b.Navigation("SleepLevelsDbM");
                });

            modelBuilder.Entity("DbModels.SleepLevelDbM", b =>
                {
                    b.Navigation("SleepsDbM");
                });

            modelBuilder.Entity("DbModels.StaffDbM", b =>
                {
                    b.Navigation("PatientsDbM");
                });
#pragma warning restore 612, 618
        }
    }
}
