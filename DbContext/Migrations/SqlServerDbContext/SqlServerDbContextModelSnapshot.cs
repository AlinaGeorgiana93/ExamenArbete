// <auto-generated />
using System;
using DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbContext.Migrations.SqlServerDbContext
{
    [DbContext(typeof(MainDbContext.SqlServerDbContext))]
    partial class SqlServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbModels.ActivityDbM", b =>
                {
                    b.Property<Guid>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Date")
                        .HasColumnType("int");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Level")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ActivityId");
                   

                    b.HasIndex("MoodDbMMoodId");

                    b.ToTable("Activitys", "supusr");
                });

            modelBuilder.Entity("DbModels.MoodDbM", b =>
                {
                    b.Property<Guid>("MoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Kind")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("int");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(200)");
                        
                    b.HasKey("MoodId");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("Moods", "supusr");
                });

            modelBuilder.Entity("DbModels.EmployeeDbM", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<bool>("Seeded")
                        .HasColumnType("bit");

                    b.Property<string>("strRole")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees", "supusr");
                });

            modelBuilder.Entity("DbModels.UserDbM", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserId");

                    b.ToTable("Users", "dbo");
                });

            modelBuilder.Entity("DbModels.ZooDbM", b =>
                {
                    b.Property<Guid>("ZooId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Seeded")
                        .HasColumnType("bit");

                    b.HasKey("ZooId");

                    b.ToTable("Zoos", "supusr");
                });

            modelBuilder.Entity("EmployeeDbMZooDbM", b =>
                {
                    b.Property<Guid>("EmployeesDbMEmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ZoosDbMZooId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeesDbMEmployeeId", "ZoosDbMZooId");

                    b.HasIndex("ZoosDbMZooId");

                    b.ToTable("EmployeeDbMZooDbM", "supusr");
                });

            modelBuilder.Entity("Models.DTO.GstUsrInfoAnimalsDto", b =>
                {
                    b.Property<string>("City")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NrAnimals")
                        .HasColumnType("int");

                    b.Property<string>("ZooName")
                        .HasColumnType("nvarchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vwInfoAnimals", "gstusr");
                });

            modelBuilder.Entity("Models.DTO.GstUsrInfoDbDto", b =>
                {
                    b.Property<int>("NrSeededAnimals")
                        .HasColumnType("int");

                    b.Property<int>("NrSeededCreditCards")
                        .HasColumnType("int");

                    b.Property<int>("NrSeededEmployees")
                        .HasColumnType("int");

                    b.Property<int>("NrSeededZoos")
                        .HasColumnType("int");

                    b.Property<int>("NrUnseededAnimals")
                        .HasColumnType("int");

                    b.Property<int>("NrUnseededCreditCards")
                        .HasColumnType("int");

                    b.Property<int>("NrUnseededEmployees")
                        .HasColumnType("int");

                    b.Property<int>("NrUnseededZoos")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vwInfoDb", "gstusr");
                });

            modelBuilder.Entity("Models.DTO.GstUsrInfoEmployeesDto", b =>
                {
                    b.Property<string>("City")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NrEmployees")
                        .HasColumnType("int");

                    b.Property<string>("ZooName")
                        .HasColumnType("nvarchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vwInfoEmployees", "gstusr");
                });

            modelBuilder.Entity("Models.DTO.GstUsrInfoZoosDto", b =>
                {
                    b.Property<string>("City")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NrZoos")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vwInfoZoos", "gstusr");
                });

            modelBuilder.Entity("DbModels.AnimalDbM", b =>
                {
                    b.HasOne("DbModels.ZooDbM", "ZooDbM")
                        .WithMany("AnimalsDbM")
                        .HasForeignKey("ZooDbMZooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZooDbM");
                });

            modelBuilder.Entity("DbModels.CreditCardDbM", b =>
                {
                    b.HasOne("DbModels.EmployeeDbM", "EmployeeDbM")
                        .WithOne("CreditCardDbM")
                        .HasForeignKey("DbModels.CreditCardDbM", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeDbM");
                });

            modelBuilder.Entity("EmployeeDbMZooDbM", b =>
                {
                    b.HasOne("DbModels.EmployeeDbM", null)
                        .WithMany()
                        .HasForeignKey("EmployeesDbMEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbModels.ZooDbM", null)
                        .WithMany()
                        .HasForeignKey("ZoosDbMZooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbModels.EmployeeDbM", b =>
                {
                    b.Navigation("CreditCardDbM");
                });

            modelBuilder.Entity("DbModels.ZooDbM", b =>
                {
                    b.Navigation("AnimalsDbM");
                });
#pragma warning restore 612, 618
        }
    }
}
